[{"/Users/johnnypan/WebstormProjects/waber/src/App.jsx":"1","/Users/johnnypan/WebstormProjects/waber/src/index.tsx":"2","/Users/johnnypan/WebstormProjects/waber/src/reportWebVitals.ts":"3","/Users/johnnypan/WebstormProjects/waber/src/SignPage.jsx":"4","/Users/johnnypan/WebstormProjects/waber/src/api/UserService.js":"5","/Users/johnnypan/WebstormProjects/waber/src/CarHailing.jsx":"6","/Users/johnnypan/WebstormProjects/waber/src/DriverHome.jsx":"7","/Users/johnnypan/WebstormProjects/waber/src/api/MatchService.js":"8","/Users/johnnypan/WebstormProjects/waber/src/model/models.js":"9","/Users/johnnypan/WebstormProjects/waber/src/localstorage.js":"10"},{"size":600,"mtime":1611913884613,"results":"11","hashOfConfig":"12"},{"size":500,"mtime":1611805854636,"results":"13","hashOfConfig":"12"},{"size":425,"mtime":1611805854638,"results":"14","hashOfConfig":"12"},{"size":5339,"mtime":1612260505730,"results":"15","hashOfConfig":"12"},{"size":1182,"mtime":1612239021833,"results":"16","hashOfConfig":"12"},{"size":3652,"mtime":1612342984232,"results":"17","hashOfConfig":"12"},{"size":952,"mtime":1612325594755,"results":"18","hashOfConfig":"12"},{"size":1362,"mtime":1612344607293,"results":"19","hashOfConfig":"12"},{"size":786,"mtime":1612325229203,"results":"20","hashOfConfig":"12"},{"size":1302,"mtime":1612260201956,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"4lvw09",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/johnnypan/WebstormProjects/waber/src/App.jsx",[],["47","48"],"/Users/johnnypan/WebstormProjects/waber/src/index.tsx",[],["49","50"],"/Users/johnnypan/WebstormProjects/waber/src/reportWebVitals.ts",[],"/Users/johnnypan/WebstormProjects/waber/src/SignPage.jsx",["51","52","53","54","55"],"import React from \"react\";\nimport './SignPage.css'\nimport './main.css'\nimport \"bulma\";\nimport {UserService} from \"./api/UserService\";\nimport {withRouter} from 'react-router-dom'\nimport {storage} from \"./localstorage\";\nimport {Location} from \"./model/models\";\n\nconst PASSENGER_TYPE = 'Passenger';\nconst DRIVER_TYPE = 'Driver';\nconst SIGN_UP_FORM = 100;\nconst SIGN_IN_FORM = 200;\n\nconst userService = new UserService();\n\nfunction periodicallyUpdateLocation(userId) {\n    setInterval(() => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(position => {\n                const location = new Location(position.coords.latitude, position.coords.longitude);\n                storage.saveUserCurrentLocation(location);\n                userService.updateLocation({userId, ...location})\n                    .catch(err => console.error(err));\n            })\n        }\n    }, 3000)\n}\n\nfunction loginSuccessfully({history, userData}) {\n    storage.saveUserId(userData.id);\n    periodicallyUpdateLocation(userData.id);\n    if (userData.carType) { // only the driver has the attribute 'carType'\n        history.push('/driver');\n    } else {\n        history.push('/car-hailing');\n    }\n}\n\nconst SignUpAsPassengerForm = withRouter(({history, switchForm, switchType}) => {\n    const submit = (e) => {\n        e.preventDefault();\n        userService.signUpAsPassenger({\n            name: e.target[0].value,\n            email: e.target[1].value,\n            password: e.target[2].value\n        }).then(res => loginSuccessfully({history, userData: res.data}));\n    };\n    return (\n        <form className=\"sign-up-form\" onSubmit={submit}>\n            <input type=\"text\" placeholder=\"name\"/>\n            <input type=\"email\" placeholder=\"email\"/>\n            <input type=\"password\" placeholder=\"password\"/>\n            <button type=\"submit\">create</button>\n            <p className=\"message\">Already registered?\n                <a className=\"ml-1\" href=\"#\" onClick={() => switchForm(SIGN_IN_FORM)}>\n                    Sign In\n                </a>\n            </p>\n            <div className=\"switch-sign-up-panel\">\n                <a href=\"#\" onClick={() => switchType(DRIVER_TYPE)}>Sign Up as Driver</a>\n            </div>\n        </form>\n    )\n})\n\nconst SignUpAsDriverForm = withRouter(({history, switchForm, switchType}) => {\n    const submit = (e) => {\n        e.preventDefault();\n        userService.signUpAsDriver({\n            name: e.target[0].value,\n            email: e.target[1].value,\n            password: e.target[2].value,\n            carType: e.target[3].value\n        }).then(res => loginSuccessfully({history, userData: res.data}));\n    };\n    return (\n        <form className=\"sign-up-form\" onSubmit={submit}>\n            <input type=\"text\" placeholder=\"name\"/>\n            <input type=\"email\" placeholder=\"email\"/>\n            <input type=\"password\" placeholder=\"password\"/>\n            <div className=\"select mb-3 is-fullwidth\">\n                <select name=\"car type\">\n                    <option value=\"Normal\">Normal</option>\n                    <option value=\"Business\">Business</option>\n                    <option value=\"Sport\">Sport</option>\n                </select>\n            </div>\n            <button type=\"submit\">create</button>\n            <p className=\"message\">Already registered?\n                <a className=\"ml-1\" href=\"#\" onClick={() => switchForm(SIGN_IN_FORM)}>\n                    Sign In\n                </a>\n            </p>\n            <div className=\"switch-sign-up-panel\">\n                <a href=\"#\" onClick={() => switchType(PASSENGER_TYPE)}>Sign Up as Passenger</a>\n            </div>\n        </form>\n    )\n});\n\nconst SignInForm = withRouter(({history, switchForm}) => {\n    const submit = (e) => {\n        e.preventDefault();\n        userService.login({\n            email: e.target[0].value,\n            password: e.target[1].value,\n        }).then(res => loginSuccessfully({history, userData: res.data}));\n    };\n\n    return (\n        <form className=\"login-form\" onSubmit={submit}>\n            <input type=\"email\" placeholder=\"email\"/>\n            <input type=\"password\" placeholder=\"password\"/>\n            <button type=\"submit\">login</button>\n            <p className=\"message\">Not registered?\n                <a className=\"ml-1\" href=\"#\" onClick={() => switchForm(SIGN_UP_FORM)}>\n                    Create an account\n                </a>\n            </p>\n        </form>\n    )\n})\n\nexport default function SignPage() {\n    const [showingForm, switchForm] = React.useState(SIGN_IN_FORM);\n    const [showingPanelType, switchType] = React.useState(PASSENGER_TYPE)\n\n    const renderSpecificForm = function () {\n        if (showingForm === SIGN_IN_FORM) {\n            return <SignInForm switchForm={switchForm}/>;\n        }\n        if (showingForm === SIGN_UP_FORM) {\n            if (showingPanelType === PASSENGER_TYPE) {\n                return <SignUpAsPassengerForm switchForm={switchForm} switchType={switchType}/>;\n            } else if (showingPanelType === DRIVER_TYPE) {\n                return <SignUpAsDriverForm switchForm={switchForm} switchType={switchType}/>;\n            }\n        }\n    }\n\n    return (\n        <div className=\"page\">\n            <div className=\"panel\">\n                {renderSpecificForm()}\n            </div>\n        </div>\n    )\n}\n","/Users/johnnypan/WebstormProjects/waber/src/api/UserService.js",[],"/Users/johnnypan/WebstormProjects/waber/src/CarHailing.jsx",["56","57"],"import './CarHailing.css'\nimport './main.css'\nimport React, {useEffect} from \"react\";\nimport MatchService from \"./api/MatchService\";\nimport {storage} from \"./localstorage\"\nimport {Location} from \"./model/models\";\nimport {CAR_TYPES} from \"./model/models\";\nimport SockJsClient from 'react-stomp';\n\n\nconst matchService = new MatchService();\n\n\nconst TripStatusView = (({match}) => {\n    return (\n        <div>\n            <p>Match Driver: {match.driver.name}</p>\n            <p>The driver's location: </p>\n        </div>\n    );\n});\n\nfunction startMatching({passengerId, startLocation, carType, onMatch}) {\n    matchService.startMatching({\n        passengerId, startLocation, carType\n    }).then(res => {\n        console.log(res.data);\n        const matchId = res.data.id;\n        storage.saveMatchId(matchId)\n        listenToMatchEvent({passengerId, matchId, onMatch});\n    });\n}\n\nfunction listenToMatchEvent({passengerId, matchId, onMatch}) {\n    matchService.listenToMatch({\n        passengerId, matchId\n    }).then(match => {\n        console.log(match.driver.name);\n        onMatch(match);\n    });\n}\n\nconst MatchingStatusView = ({matchId, destination}) => {\n    const [match, setMatch] = React.useState()\n    useEffect(() => {\n        console.log(`N ${destination.latitude}, E ${destination.longitude}`);\n        if (matchId) {\n            listenToMatchEvent({\n                passengerId: storage.getUserId(),\n                matchId,\n                onMatch: m => setMatch(m)\n            });\n        } else {\n            startMatching({\n                passengerId: storage.getUserId(),\n                startLocation: storage.getUserCurrentLocation(),\n                carType: CAR_TYPES.NORMAL,\n                onMatch: m => setMatch(m)\n            });\n        }\n    }, [destination.latitude, destination.longitude, match, matchId]);\n    return (\n        <div className=\"matchingStatusView mt-3\">\n            {match ?\n                <TripStatusView match={match}/>\n                : <p>Matching ...</p>\n            }\n        </div>\n    )\n}\n\nexport default function CarHailing() {\n    let [matching, setMatching] = React.useState(false);\n    let [destination, setDestination] = React.useState(storage.getDestination());\n    const matchId = storage.getMatchId();\n\n    const startMatching = (e) => {\n        e.preventDefault();\n        const destination = new Location(parseFloat(e.target[0].value), parseFloat(e.target[1].value));\n        setDestination(destination);\n        storage.saveDestination(destination);\n        setMatching(true);\n    }\n\n    useEffect(() => {\n        if (matchId) {\n            setMatching(true)\n        }\n    })\n\n    return (\n        <div className=\"page\">\n            <div className=\"panel py-4\">\n                <section className=\"hero is-link mb-2\">\n                    <div className=\"hero-body\">\n                        <p className=\"title\">\n                            Hi\n                        </p>\n                        <p className=\"subtitle\">\n                            Where are you going to go?\n                        </p>\n                    </div>\n                </section>\n                <form onSubmit={startMatching}>\n                    <input type=\"number\" disabled={matching} placeholder=\"latitude\" defaultValue=\"25.047\"/>\n                    <input type=\"number\" disabled={matching} placeholder=\"longitude\" defaultValue=\"121.51\"/>\n                    <button type=\"submit\" className={matching ? 'disabled' : ''}>Go!</button>\n                </form>\n                {matching ? <MatchingStatusView matchId={matchId} destination={destination}/> : null}\n            </div>\n        </div>\n    );\n}\n\n","/Users/johnnypan/WebstormProjects/waber/src/DriverHome.jsx",["58"],"import React from \"react\";\n\n\nconst MatchStatusView = () => {\n    const [match, setMatch] = React.useState();\n\n    return (\n        <div className=\"py-3\">\n            {match ? (\n                <div>\n                    <p>Match Passenger</p>\n                    <p>Start Location: match.startLocation</p>\n                </div>\n            ) : <p>No Match</p>\n            }\n\n        </div>\n    );\n}\n\nexport default function DriverHome() {\n    return (\n        <div className=\"page\">\n            <div className=\"panel\">\n                <p className=\"mb-2\">Driver Home</p>\n                <form onSubmit=\"\">\n                    <input type=\"number\" placeholder=\"latitude\" defaultValue=\"25.047\"/>\n                    <input type=\"number\" placeholder=\"longitude\" defaultValue=\"121.51\"/>\n                    <button type=\"submit\">Update Location</button>\n                </form>\n                <MatchStatusView/>\n            </div>\n        </div>\n\n    )\n}\n","/Users/johnnypan/WebstormProjects/waber/src/api/MatchService.js",[],"/Users/johnnypan/WebstormProjects/waber/src/model/models.js",[],"/Users/johnnypan/WebstormProjects/waber/src/localstorage.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":56,"column":17,"nodeType":"65","endLine":56,"endColumn":87},{"ruleId":"63","severity":1,"message":"64","line":61,"column":17,"nodeType":"65","endLine":61,"endColumn":69},{"ruleId":"63","severity":1,"message":"64","line":91,"column":17,"nodeType":"65","endLine":91,"endColumn":87},{"ruleId":"63","severity":1,"message":"64","line":96,"column":17,"nodeType":"65","endLine":96,"endColumn":72},{"ruleId":"63","severity":1,"message":"64","line":117,"column":17,"nodeType":"65","endLine":117,"endColumn":87},{"ruleId":"66","severity":1,"message":"67","line":8,"column":8,"nodeType":"68","messageId":"69","endLine":8,"endColumn":20},{"ruleId":"70","severity":1,"message":"71","line":85,"column":5,"nodeType":"68","endLine":85,"endColumn":14,"suggestions":"72"},{"ruleId":"66","severity":1,"message":"73","line":5,"column":19,"nodeType":"68","messageId":"69","endLine":5,"endColumn":27},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'SockJsClient' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setMatching'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [matchId] as a second argument to the useEffect Hook.",["76"],"'setMatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Add dependencies array: [matchId]",{"range":"79","text":"80"},[2638,2638],", [matchId]"]