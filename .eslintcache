[{"/Users/johnnypan/WebstormProjects/waber/src/App.jsx":"1","/Users/johnnypan/WebstormProjects/waber/src/index.tsx":"2","/Users/johnnypan/WebstormProjects/waber/src/reportWebVitals.ts":"3","/Users/johnnypan/WebstormProjects/waber/src/SignPage.jsx":"4","/Users/johnnypan/WebstormProjects/waber/src/api/UserService.js":"5","/Users/johnnypan/WebstormProjects/waber/src/CarHailing.jsx":"6","/Users/johnnypan/WebstormProjects/waber/src/DriverHome.jsx":"7","/Users/johnnypan/WebstormProjects/waber/src/api/MatchService.js":"8","/Users/johnnypan/WebstormProjects/waber/src/model/models.js":"9","/Users/johnnypan/WebstormProjects/waber/src/localstorage.js":"10"},{"size":600,"mtime":1611913884613,"results":"11","hashOfConfig":"12"},{"size":500,"mtime":1611805854636,"results":"13","hashOfConfig":"12"},{"size":425,"mtime":1611805854638,"results":"14","hashOfConfig":"12"},{"size":5339,"mtime":1612260505730,"results":"15","hashOfConfig":"12"},{"size":1182,"mtime":1612239021833,"results":"16","hashOfConfig":"12"},{"size":3497,"mtime":1612261700889,"results":"17","hashOfConfig":"12"},{"size":93,"mtime":1611913884610,"results":"18","hashOfConfig":"12"},{"size":952,"mtime":1612241808923,"results":"19","hashOfConfig":"12"},{"size":497,"mtime":1612259000799,"results":"20","hashOfConfig":"12"},{"size":1302,"mtime":1612260201956,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"4lvw09",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/johnnypan/WebstormProjects/waber/src/App.jsx",[],["45","46"],"/Users/johnnypan/WebstormProjects/waber/src/index.tsx",[],["47","48"],"/Users/johnnypan/WebstormProjects/waber/src/reportWebVitals.ts",[],"/Users/johnnypan/WebstormProjects/waber/src/SignPage.jsx",["49","50","51","52","53"],"import React from \"react\";\nimport './SignPage.css'\nimport './main.css'\nimport \"bulma\";\nimport {UserService} from \"./api/UserService\";\nimport {withRouter} from 'react-router-dom'\nimport {storage} from \"./localstorage\";\nimport {Location} from \"./model/models\";\n\nconst PASSENGER_TYPE = 'Passenger';\nconst DRIVER_TYPE = 'Driver';\nconst SIGN_UP_FORM = 100;\nconst SIGN_IN_FORM = 200;\n\nconst userService = new UserService();\n\nfunction periodicallyUpdateLocation(userId) {\n    setInterval(() => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(position => {\n                const location = new Location(position.coords.latitude, position.coords.longitude);\n                storage.saveUserCurrentLocation(location);\n                userService.updateLocation({userId, ...location})\n                    .catch(err => console.error(err));\n            })\n        }\n    }, 3000)\n}\n\nfunction loginSuccessfully({history, userData}) {\n    storage.saveUserId(userData.id);\n    periodicallyUpdateLocation(userData.id);\n    if (userData.carType) { // only the driver has the attribute 'carType'\n        history.push('/driver');\n    } else {\n        history.push('/car-hailing');\n    }\n}\n\nconst SignUpAsPassengerForm = withRouter(({history, switchForm, switchType}) => {\n    const submit = (e) => {\n        e.preventDefault();\n        userService.signUpAsPassenger({\n            name: e.target[0].value,\n            email: e.target[1].value,\n            password: e.target[2].value\n        }).then(res => loginSuccessfully({history, userData: res.data}));\n    };\n    return (\n        <form className=\"sign-up-form\" onSubmit={submit}>\n            <input type=\"text\" placeholder=\"name\"/>\n            <input type=\"email\" placeholder=\"email\"/>\n            <input type=\"password\" placeholder=\"password\"/>\n            <button type=\"submit\">create</button>\n            <p className=\"message\">Already registered?\n                <a className=\"ml-1\" href=\"#\" onClick={() => switchForm(SIGN_IN_FORM)}>\n                    Sign In\n                </a>\n            </p>\n            <div className=\"switch-sign-up-panel\">\n                <a href=\"#\" onClick={() => switchType(DRIVER_TYPE)}>Sign Up as Driver</a>\n            </div>\n        </form>\n    )\n})\n\nconst SignUpAsDriverForm = withRouter(({history, switchForm, switchType}) => {\n    const submit = (e) => {\n        e.preventDefault();\n        userService.signUpAsDriver({\n            name: e.target[0].value,\n            email: e.target[1].value,\n            password: e.target[2].value,\n            carType: e.target[3].value\n        }).then(res => loginSuccessfully({history, userData: res.data}));\n    };\n    return (\n        <form className=\"sign-up-form\" onSubmit={submit}>\n            <input type=\"text\" placeholder=\"name\"/>\n            <input type=\"email\" placeholder=\"email\"/>\n            <input type=\"password\" placeholder=\"password\"/>\n            <div className=\"select mb-3 is-fullwidth\">\n                <select name=\"car type\">\n                    <option value=\"Normal\">Normal</option>\n                    <option value=\"Business\">Business</option>\n                    <option value=\"Sport\">Sport</option>\n                </select>\n            </div>\n            <button type=\"submit\">create</button>\n            <p className=\"message\">Already registered?\n                <a className=\"ml-1\" href=\"#\" onClick={() => switchForm(SIGN_IN_FORM)}>\n                    Sign In\n                </a>\n            </p>\n            <div className=\"switch-sign-up-panel\">\n                <a href=\"#\" onClick={() => switchType(PASSENGER_TYPE)}>Sign Up as Passenger</a>\n            </div>\n        </form>\n    )\n});\n\nconst SignInForm = withRouter(({history, switchForm}) => {\n    const submit = (e) => {\n        e.preventDefault();\n        userService.login({\n            email: e.target[0].value,\n            password: e.target[1].value,\n        }).then(res => loginSuccessfully({history, userData: res.data}));\n    };\n\n    return (\n        <form className=\"login-form\" onSubmit={submit}>\n            <input type=\"email\" placeholder=\"email\"/>\n            <input type=\"password\" placeholder=\"password\"/>\n            <button type=\"submit\">login</button>\n            <p className=\"message\">Not registered?\n                <a className=\"ml-1\" href=\"#\" onClick={() => switchForm(SIGN_UP_FORM)}>\n                    Create an account\n                </a>\n            </p>\n        </form>\n    )\n})\n\nexport default function SignPage() {\n    const [showingForm, switchForm] = React.useState(SIGN_IN_FORM);\n    const [showingPanelType, switchType] = React.useState(PASSENGER_TYPE)\n\n    const renderSpecificForm = function () {\n        if (showingForm === SIGN_IN_FORM) {\n            return <SignInForm switchForm={switchForm}/>;\n        }\n        if (showingForm === SIGN_UP_FORM) {\n            if (showingPanelType === PASSENGER_TYPE) {\n                return <SignUpAsPassengerForm switchForm={switchForm} switchType={switchType}/>;\n            } else if (showingPanelType === DRIVER_TYPE) {\n                return <SignUpAsDriverForm switchForm={switchForm} switchType={switchType}/>;\n            }\n        }\n    }\n\n    return (\n        <div className=\"page\">\n            <div className=\"panel\">\n                {renderSpecificForm()}\n            </div>\n        </div>\n    )\n}\n","/Users/johnnypan/WebstormProjects/waber/src/api/UserService.js",[],"/Users/johnnypan/WebstormProjects/waber/src/CarHailing.jsx",["54"],"/Users/johnnypan/WebstormProjects/waber/src/DriverHome.jsx",[],"/Users/johnnypan/WebstormProjects/waber/src/api/MatchService.js",[],"/Users/johnnypan/WebstormProjects/waber/src/model/models.js",[],"/Users/johnnypan/WebstormProjects/waber/src/localstorage.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":56,"column":17,"nodeType":"61","endLine":56,"endColumn":87},{"ruleId":"59","severity":1,"message":"60","line":61,"column":17,"nodeType":"61","endLine":61,"endColumn":69},{"ruleId":"59","severity":1,"message":"60","line":91,"column":17,"nodeType":"61","endLine":91,"endColumn":87},{"ruleId":"59","severity":1,"message":"60","line":96,"column":17,"nodeType":"61","endLine":96,"endColumn":72},{"ruleId":"59","severity":1,"message":"60","line":117,"column":17,"nodeType":"61","endLine":117,"endColumn":87},{"ruleId":"62","severity":1,"message":"63","line":7,"column":9,"nodeType":"64","messageId":"65","endLine":7,"endColumn":18},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'CAR_TYPES' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]